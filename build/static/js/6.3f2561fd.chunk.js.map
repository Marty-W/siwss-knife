{"version":3,"sources":["components/UI/Plus.tsx","components/habits/HabitList/HabitStreaks.tsx","components/habits/HabitList/HabitDetail.tsx","components/habits/HabitList/DayRow.tsx","components/habits/HabitList/HabitCheck.tsx","components/habits/HabitList/Habit.tsx","components/habits/HabitList/HabitList.tsx","utils/utils.ts","components/habits/NewHabit/ColorPicker.tsx","components/habits/NewHabit/NewHabit.tsx","pages/Habits.tsx"],"names":["PlusSVG","styled","motion","svg","Plus","onClick","xmlns","fill","viewBox","width","height","whileHover","scale","d","Wrapper","div","props","color","CurrentStreak","Start","p","End","StreakBar","barWidth","theme","colors","primary","tertiary","HabitStreaks","timePoints","habitColor","arr","result","maxStr","current","entry","a","end","b","differenceInCalendarDays","push","start","streaks","sort","map","streak","Date","filter","calculateStreaks","length","formatDate","date","format","isToday","Fragment","key","uuid","CalendarWrapper","HabitName","h2","Description","DeleteBtn","Button","HabitDetail","hide","state","useLocation","name","id","dateArr","description","useTheme","user","useCurrentUser","addToast","useToasts","deleteHabit","habitId","habitRef","db","doc","uid","delete","message","appearance","data","timePoint","toDate","day","value","from","startOfYear","to","endOfYear","direction","emptyColor","dayBorderColor","secondary","monthBorderWidth","monthLegendOffset","legends","text","tooltip","style","variant","DayWrapper","Today","span","accent","Month","DayRow","days","index","parsedDate","parsedMonth","XMark","GrFormClose","Check","GrFormCheckmark","HabitCheck","checked","onCheck","CheckWrapper","HabitLink","Link","Habit","toggleDetail","point","getTime","reverse","handleCheck","update","firebase","firestore","FieldValue","arrayUnion","arrayRemove","pathname","includes","CtaText","HabitList","listRef","collection","useCollectionData","habits","loading","today","eachDayOfInterval","sub","generateDays","Spinner","habit","Swatch","Picker","CirclePicker","ColorPicker","onColorChange","useState","showPicker","setShowPicker","prev","onChangeComplete","pickedColor","hex","NewHabit","setColor","setDescription","setName","error","setError","submitNewHabit","set","MaterialInputName","label","onChange","e","target","placeholder","required","size","MaterialInputDesc","multiline","HabitBtn","TextField","Habits","useModal","newIsShowing","toggleNew","detailIsShowing","match","useRouteMatch","path","Modal","isShowing","modalHeight"],"mappings":"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","file":"static/js/6.3f2561fd.chunk.js","sourcesContent":["import React from 'react'\nimport { motion } from 'framer-motion'\nimport styled from 'styled-components/'\n\ninterface Props {\n  onClick: () => void\n}\n\nconst Plus: React.FC<Props> = ({ onClick }) => (\n  <PlusSVG\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"#F02D3A\"\n    viewBox=\"0 0 50 50\"\n    width=\"50px\"\n    height=\"50px\"\n    whileHover={{ scale: 1.1 }}\n    onClick={onClick}\n  >\n    <path d=\"M25,2C12.317,2,2,12.317,2,25s10.317,23,23,23s23-10.317,23-23S37.683,2,25,2z M37,26H26v11h-2V26H13v-2h11V13h2v11h11V26z\" />\n  </PlusSVG>\n)\n\nconst PlusSVG = styled(motion.svg)`\n  position: absolute;\n  cursor: pointer;\n  width: 3rem;\n  height: 3rem;\n  bottom: 0;\n  right: 0;\n`\n\nexport default Plus\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-shadow */\nimport { differenceInCalendarDays, format, isToday } from 'date-fns'\nimport { v4 as uuid } from 'uuid'\nimport React from 'react'\nimport styled from 'styled-components/'\n\ninterface Props {\n  timePoints: number[]\n  habitColor: string\n}\n\nconst HabitStreaks: React.FC<Props> = ({ timePoints, habitColor }) => {\n  const { streaks, maxStr } = calculateStreaks(timePoints)\n  streaks.length = 4\n\n  function calculateStreaks(arr: number[]) {\n    const result = []\n    let maxStr = 0\n    let current = null\n    for (const entry of arr) {\n      if (!current || !isConsecutive(current.end, entry)) {\n        result.push(\n          (current = {\n            start: entry,\n            end: entry,\n          }),\n        )\n      } else {\n        current.end = entry\n      }\n    }\n\n    const streaks = result\n      .sort((a, b) => {\n        if (a.end > b.end) return -1\n        if (a.end < b.end) return 1\n        return 0\n      })\n      .map((entry) => {\n        const streak = differenceInCalendarDays(entry.start, entry.end) + 1\n        if (streak > maxStr) {\n          maxStr = streak\n        }\n        return {\n          start: new Date(entry.start),\n          end: new Date(entry.end),\n          streak,\n        }\n      })\n      .filter((entry) => entry.streak > 1)\n\n    return { streaks, maxStr } as const\n  }\n\n  function isConsecutive(a: number, b: number) {\n    return differenceInCalendarDays(a, b) === 1\n  }\n\n  const formatDate = (date: Date) => format(date, 'd MMM')\n\n  return (\n    <Wrapper color={habitColor}>\n      <span>Streaks:</span>\n      <CurrentStreak>\n        <p>Current streak:</p>\n        <p>\n          {streaks[0] && isToday(streaks[0].start) ? streaks[0].streak : 0}\n          days\n        </p>\n      </CurrentStreak>\n      {streaks.length > 0 &&\n        streaks?.map((streak) => (\n          <React.Fragment key={uuid()}>\n            <Start>{formatDate(streak.end)}</Start>\n            <StreakBar\n              color={habitColor}\n              barWidth={`${(streak.streak / maxStr) * 100}%`}\n            >\n              <div>{streak.streak}</div>\n            </StreakBar>\n            <End>{formatDate(streak.start)}</End>\n          </React.Fragment>\n        ))}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  grid-area: streaks;\n  align-self: stretch;\n  justify-self: stretch;\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr;\n  grid-template-rows: 5% repeat(auto-fit, minmax(1rem, 3rem));\n  grid-row-gap: 1em;\n  place-items: center;\n  border: 1px solid ${(props) => props.color};\n  border-radius: 10px;\n  padding: 0.5rem;\n\n  & span {\n    align-self: flex-start;\n    font-size: 0.7rem;\n  }\n`\n\nconst CurrentStreak = styled.div`\n  grid-column: 1 / -1;\n  grid-row: 2;\n  font-size: 1.1rem;\n`\n\nconst Start = styled.p`\n  grid-column: 1 / span 1;\n  font-size: 0.7rem;\n`\n\nconst End = styled.p`\n  grid-column: 3 / span 1;\n  font-size: 0.7rem;\n`\n\nconst StreakBar = styled.div<{ color: string; barWidth: string }>`\n  grid-column: 2 / span 1;\n  background-color: ${(props) => props.color};\n  display: flex;\n  justify-content: center;\n  padding: 0.1em 0;\n  border-radius: 25px;\n  justify-self: center;\n  min-width: ${(props) => props.barWidth};\n\n  & div {\n    text-align: center;\n    padding: 0.1em;\n    color: ${(props) => props.theme.colors.primary};\n    width: 1.1rem;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.colors.tertiary};\n  }\n`\n\nexport default HabitStreaks\n","import { useLocation } from 'react-router-dom'\nimport { endOfYear, format, startOfYear } from 'date-fns'\nimport { useToasts } from 'react-toast-notifications'\nimport React from 'react'\nimport { FirebaseError } from 'firebase'\nimport { ResponsiveCalendar, CalendarDatum } from '@nivo/calendar'\nimport styled, { useTheme } from 'styled-components/'\nimport Button from '../../UI/Button'\nimport HabitStreaks from './HabitStreaks'\nimport { db } from '../../../firebase/firebase'\nimport useCurrentUser from '../../../hooks/useCurrentUser'\nimport { IHabitDetail } from '../../../utils/interfaces'\n\ninterface Props {\n  hide: () => void\n}\n\nconst HabitDetail: React.FC<Props> = ({ hide }) => {\n  const { state } = useLocation<IHabitDetail>()\n  const { color, name, id, dateArr, description } = state\n  const theme = useTheme()\n  const user = useCurrentUser()\n  const { addToast } = useToasts()\n\n  const deleteHabit = async (habitId: string) => {\n    const habitRef = db.doc(`users/${user?.uid}/habitList/${habitId}`)\n\n    try {\n      await habitRef.delete()\n      hide()\n    } catch (err) {\n      addToast((err as FirebaseError).message, { appearance: 'error' })\n    }\n  }\n\n  const formatTimePoints = (timePoints: number[]) => {\n    if (timePoints) {\n      return timePoints.map((timePoint) => {\n        const toDate = new Date(timePoint)\n        const formatted = format(toDate, 'yyyy-MM-dd')\n        return {\n          day: formatted,\n          value: 1,\n        }\n      })\n    }\n    return null\n  }\n\n  return (\n    <Wrapper>\n      <HabitName color={color}>{name}</HabitName>\n      <HabitStreaks timePoints={dateArr} habitColor={color} />\n      <Description color={color}>\n        <span>Description:</span>\n        <p>{description}</p>\n      </Description>\n      <CalendarWrapper>\n        <ResponsiveCalendar\n          data={formatTimePoints(dateArr) as CalendarDatum[]}\n          from={format(startOfYear(new Date()), 'yyyy-MM-dd')}\n          to={format(endOfYear(new Date()), 'yyyy-MM-dd')}\n          direction=\"vertical\"\n          colors={[color]}\n          emptyColor={theme.colors.primary}\n          dayBorderColor={theme.colors.secondary}\n          monthBorderWidth={0}\n          monthLegendOffset={12}\n          theme={{ legends: { text: { color: theme.colors.tertiary } } }}\n          tooltip={({ day }) => (\n            <strong style={{ color: '#101119' }}>{day}</strong>\n          )}\n        />\n      </CalendarWrapper>\n      <DeleteBtn\n        color={color}\n        onClick={() => deleteHabit(id)}\n        variant=\"primary\"\n      >\n        Delete Habit\n      </DeleteBtn>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-rows: 0.1fr 1fr 0.2fr 0.1fr;\n  grid-row-gap: 1rem;\n  grid-template-columns: 1fr 0.7fr;\n  grid-template-areas:\n    'name cal'\n    'streaks cal'\n    'desc cal'\n    'button cal';\n`\n\nconst CalendarWrapper = styled.div`\n  grid-area: cal;\n`\n\nconst HabitName = styled.h2`\n  color: ${(props) => props.color};\n  font-size: 1.3rem;\n  grid-area: name;\n`\n\nconst Description = styled.div`\n  grid-area: desc;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${(props) => props.color};\n  border-radius: 10px;\n  & span {\n    align-self: start;\n    font-size: 0.7rem;\n    margin-bottom: 0.5rem;\n  }\n`\n\nconst DeleteBtn = styled(Button)<{ color: string }>`\n  grid-area: button;\n  place-self: center;\n`\n\nexport default HabitDetail\n","import { format } from 'date-fns'\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\ninterface Props {\n  days: Date[]\n}\n\nconst DayRow: React.FC<Props> = ({ days }) => (\n  <Wrapper>\n    {days.map((day, index) => {\n      const parsedDate = format(day, 'd')\n      const parsedMonth = format(day, 'LLL')\n      return index === 0 ? (\n        <Today key={uuid()}>Today</Today>\n      ) : (\n        <DayWrapper key={uuid()}>\n          <Date>{parsedDate}</Date>\n          <Month>{parsedMonth}</Month>\n        </DayWrapper>\n      )\n    })}\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\n  grid-column: 2 / -1;\n  grid-row: 1 / span 1;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(3rem, 1fr));\n  grid-template-rows: 1fr;\n  grid-auto-rows: 0px;\n  grid-auto-columns: 0px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.colors.secondary};\n  border-radius: 8px;\n`\n\nconst DayWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`\n\nconst Today = styled.span`\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.accent};\n  place-self: center;\n`\n\nconst Date = styled.span``\n\nconst Month = styled.span``\n\nexport default DayRow\n","import { GrFormCheckmark, GrFormClose } from 'react-icons/gr'\n\nimport React from 'react'\nimport styled from 'styled-components/'\n\ninterface Props {\n  checked?: boolean\n  color: string\n  onCheck: (date: Date, checked: boolean) => void\n  day: Date\n}\n\nconst HabitCheck: React.FC<Props> = ({\n  checked = false,\n  color,\n  onCheck,\n  day,\n}) => (\n  <Wrapper onClick={() => onCheck(day, checked)}>\n    {checked ? <Check color={color} /> : <XMark color={color} />}\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  & svg {\n    cursor: pointer;\n    place-self: center;\n  }\n`\n\nconst XMark = styled(GrFormClose)`\n  & path {\n    stroke: ${(props) => props.theme.colors.secondary};\n  }\n`\n\nconst Check = styled(GrFormCheckmark)<{ color: string }>`\n  & polyline {\n    stroke: ${(props) => props.color};\n  }\n`\n\nexport default HabitCheck\n","import { Link } from 'react-router-dom'\nimport React from 'react'\nimport styled from 'styled-components/'\nimport { useToasts } from 'react-toast-notifications'\nimport { FirebaseError } from 'firebase'\nimport { v4 as uuid } from 'uuid'\nimport { db, firebase } from '../../../firebase/firebase'\nimport HabitCheck from './HabitCheck'\nimport useCurrentUser from '../../../hooks/useCurrentUser'\nimport { IFirebaseHabit } from '../../../utils/interfaces'\n\ninterface Props extends IFirebaseHabit {\n  toggleDetail: () => void\n  days: Date[]\n}\n\nconst Habit: React.FC<Props> = ({\n  color,\n  name,\n  id,\n  timePoints,\n  description,\n  toggleDetail,\n  days,\n}) => {\n  const user = useCurrentUser()\n  const dateArr = [...timePoints]\n    .map((point) => point.toDate().getTime())\n    .sort((a, b) => a - b)\n    .reverse()\n  const { addToast } = useToasts()\n\n  const handleCheck = async (date: Date, checked: boolean) => {\n    const habitRef = db.doc(`users/${user?.uid}/habitList/${id}`)\n\n    if (!checked) {\n      try {\n        await habitRef.update({\n          timePoints: firebase.firestore.FieldValue.arrayUnion(date),\n        })\n      } catch (err) {\n        addToast((err as FirebaseError).message, { appearance: 'error' })\n      }\n    } else {\n      try {\n        await habitRef.update({\n          timePoints: firebase.firestore.FieldValue.arrayRemove(date),\n        })\n      } catch (err) {\n        addToast((err as FirebaseError).message, { appearance: 'error' })\n      }\n    }\n  }\n\n  return (\n    <Wrapper>\n      <HabitLink\n        to={{\n          pathname: `/habits/${id}`,\n          state: {\n            color,\n            name,\n            id,\n            dateArr,\n            description,\n          } as const,\n        }}\n        onClick={toggleDetail}\n      >\n        <HabitName color={color}>{name}</HabitName>\n      </HabitLink>\n      <CheckWrapper>\n        {days.map((date) => (\n          <HabitCheck\n            color={color}\n            day={date}\n            checked={dateArr.includes(date.getTime())}\n            onCheck={handleCheck}\n            key={uuid()}\n          />\n        ))}\n      </CheckWrapper>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5rem 1fr;\n  grid-column: 1 / -1;\n  grid-template-rows: 3rem;\n`\n\nconst CheckWrapper = styled.div`\n  display: grid;\n  grid-column: 2 / -1;\n  grid-template-columns: repeat(auto-fit, minmax(3rem, 1fr));\n  grid-template-rows: 1fr;\n  grid-auto-rows: 0px;\n  grid-auto-columns: 0px;\n  overflow: hidden;\n`\n\nconst HabitLink = styled(Link)`\n  grid-column: 1 / span 1;\n  place-self: center;\n`\n\nconst HabitName = styled.span<{\n  color: string\n}>`\n  color: ${(props) => props.color};\n`\n\nexport default Habit\n","import React from 'react'\nimport styled from 'styled-components/'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport DayRow from './DayRow'\nimport Habit from './Habit'\nimport { db } from '../../../firebase/firebase'\nimport { generateDays } from '../../../utils/utils'\nimport useCurrentUser from '../../../hooks/useCurrentUser'\nimport { IFirebaseHabit } from '../../../utils/interfaces'\nimport Spinner from '../../UI/Spinner'\n\ninterface Props {\n  toggleDetail: () => void\n}\n\nconst HabitList: React.FC<Props> = ({ toggleDetail }) => {\n  const user = useCurrentUser()\n  const listRef = db.collection(`users/${user?.uid}/habitList`)\n  const [habits, loading] = useCollectionData<IFirebaseHabit>(listRef)\n  const days = generateDays()\n  return (\n    <Wrapper>\n      <DayRow days={days} />\n      {!habits?.length && (\n        <CtaText>Create your first habit to see the dashboard.</CtaText>\n      )}\n      {loading ? (\n        <Spinner />\n      ) : (\n        habits?.map((habit) => {\n          const { color, name, id, timePoints, description } = habit\n          return (\n            <Habit\n              days={days}\n              color={color}\n              name={name}\n              id={id}\n              key={id}\n              timePoints={timePoints}\n              description={description}\n              toggleDetail={toggleDetail}\n            />\n          )\n        })\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5rem 1fr;\n  grid-template-rows: 4rem repeat(auto-fill, 3rem);\n`\n\nconst CtaText = styled.p`\n  font-size: 1.3rem;\n  font-style: italic;\n  grid-row: 2 / span 1;\n  grid-column: 2 / -1;\n  margin-top: 2rem;\n  justify-self: center;\n`\n\nexport default HabitList\n","import { eachDayOfInterval, sub } from 'date-fns'\n\nexport const generateDays = () => {\n  const today = new Date()\n  return eachDayOfInterval({\n    start: sub(today, { days: 30 }),\n    end: today,\n  }).reverse()\n}\n\nexport const checkIfToday = (date: number): boolean => {\n  const today = new Date()\n  const taskDate = new Date(date)\n  return (\n    taskDate.getDate() === today.getDate() &&\n    taskDate.getMonth() === today.getMonth() &&\n    taskDate.getFullYear() === today.getFullYear()\n  )\n}\n","import { CirclePicker, ColorResult } from 'react-color'\nimport React, { useState } from 'react'\n\nimport styled from 'styled-components'\n\ninterface Props {\n  color: string\n  onColorChange: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst ColorPicker: React.FC<Props> = ({ color, onColorChange }) => {\n  const [showPicker, setShowPicker] = useState(false)\n\n  const handleColorPick = (pickedColor: ColorResult) => {\n    onColorChange(pickedColor.hex)\n    setShowPicker(false)\n  }\n\n  return (\n    <Wrapper>\n      <span>Label color</span>\n      <Swatch color={color} onClick={() => setShowPicker((prev) => !prev)} />\n      {showPicker && (\n        <Picker color={color} onChangeComplete={handleColorPick} />\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  grid-area: color;\n  display: flex;\n  align-items: center;\n\n  & span {\n    margin-right: 0.6em;\n  }\n`\n\nconst Swatch = styled.div<{ color: string }>`\n  width: 2em;\n  height: 2em;\n  background-color: ${(props) => props.color};\n  border-radius: 50%;\n  cursor: pointer;\n`\n\nconst Picker = styled(CirclePicker)`\n  position: absolute;\n  z-index: 15;\n  background: ${(props) => props.theme.colors.primary};\n  bottom: 0;\n  padding: 1em;\n`\n\nexport default ColorPicker\n","import React, { useState } from 'react'\n\nimport { TextField } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { FirebaseError } from 'firebase'\nimport Button from '../../UI/Button'\nimport ColorPicker from './ColorPicker'\nimport ErrorMsg from '../../UI/ErrorMsg.styles'\nimport { db } from '../../../firebase/firebase'\nimport useCurrentUser from '../../../hooks/useCurrentUser'\n\ninterface Props {\n  hide: () => void\n}\n\nconst NewHabit: React.FC<Props> = ({ hide }) => {\n  const [color, setColor] = useState<string>('#f44336')\n  const [description, setDescription] = useState('')\n  const [name, setName] = useState('')\n  const [error, setError] = useState<FirebaseError>()\n  const user = useCurrentUser()\n\n  const submitNewHabit = async () => {\n    if (user) {\n      const habitRef = db.collection(`users/${user?.uid}/habitList`).doc()\n      try {\n        await habitRef.set({\n          name,\n          description,\n          color,\n          id: habitRef.id,\n          timePoints: [],\n        })\n        hide()\n      } catch (err) {\n        setError(err)\n      }\n    }\n  }\n\n  return (\n    <Wrapper>\n      {error ? (\n        <ErrorMsg>{error.message}</ErrorMsg>\n      ) : (\n        <>\n          <MaterialInputName\n            id=\"habit-name\"\n            label=\"Name\"\n            name=\"habit-name\"\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"TV 2hrs\"\n            required\n            size=\"small\"\n            value={name}\n          />\n          <ColorPicker color={color} onColorChange={setColor} />\n          <MaterialInputDesc\n            id=\"habit-desc\"\n            label=\"Description\"\n            name=\"habit-description\"\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"\"\n            multiline\n            size=\"small\"\n            value={description}\n          />\n          <HabitBtn onClick={submitNewHabit} variant=\"primary\" color={color}>\n            Add new habit\n          </HabitBtn>\n        </>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default NewHabit\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 0.4fr 0.4fr 0.3fr;\n  grid-template-areas:\n    'name name'\n    'desc desc'\n    'color btn';\n  align-items: center;\n  grid-row-gap: 1em;\n  & label {\n    font-size: 0.85rem;\n  }\n\n  & button {\n    justify-self: center;\n  }\n`\n\nconst MaterialInputName = styled(TextField)`\n  && input {\n    color: ${(props) => props.theme.colors.tertiary};\n  }\n\n  && label {\n    color: ${(props) => props.theme.colors.tertiary};\n    font-size: 0.85rem;\n  }\n\n  .MuiInput-underline::after {\n    border-bottom: 2px solid ${(props) => props.theme.colors.accent};\n  }\n\n  && textarea {\n    color: ${(props) => props.theme.colors.tertiary};\n  }\n\n  grid-area: name;\n`\n\nconst MaterialInputDesc = styled(MaterialInputName)`\n  grid-area: desc;\n  align-self: end;\n`\n\nconst HabitBtn = styled(Button)<{ color: string }>`\n  background-color: ${(props) => props.color};\n`\n","import { Route, Switch, useRouteMatch } from 'react-router-dom'\n\nimport React from 'react'\nimport styled from 'styled-components/'\nimport HabitDetail from '../components/habits/HabitList/HabitDetail'\nimport HabitList from '../components/habits/HabitList/HabitList'\nimport Modal from '../components/UI/Modal'\nimport NewHabit from '../components/habits/NewHabit/NewHabit'\nimport Plus from '../components/UI/Plus'\nimport useModal from '../hooks/useModal'\n\nconst Habits: React.FC = () => {\n  const [newIsShowing, toggleNew] = useModal()\n  const [detailIsShowing, toggleDetail] = useModal()\n  const match = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <Switch>\n        <Route path={`${match.path}/:id`}>\n          <Modal\n            isShowing={detailIsShowing}\n            hide={toggleDetail}\n            modalHeight=\"70vh\"\n          >\n            <HabitDetail hide={toggleDetail} />\n          </Modal>\n        </Route>\n      </Switch>\n      <HabitList toggleDetail={toggleDetail} />\n      <Modal isShowing={newIsShowing} hide={toggleNew} modalHeight=\"40vh\">\n        <NewHabit hide={toggleNew} />\n      </Modal>\n      <Plus onClick={toggleNew} />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  grid-area: content;\n`\n\nexport default Habits\n"],"sourceRoot":""}